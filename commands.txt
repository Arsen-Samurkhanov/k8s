kubectl create serviceaccount build_bot
kubectl get serviceaccounts 
kubectl describe serviceaccount build_bot
kubectl delete serviceaccount build_bot

kubectl create role read-only --verb=list,get,watch --resource=pods,deployments,services
kubectl get roles
kubectl describe role read-only
kubectl delete role read-only

kubectl create rolebinding read-only-binding --role=read-only --user=johndoe
kubectl get rolebindings

kubectl config current-context
kubectl get deployments
kubectl get replicasets
kubectl delete deployment myapp
kubectl get nodes

kubectl create namespace apps
kubectl run operator --image=nginx:1.21.1 -n apps
kubectl get pods -n apps
kubectl port-forward  operator 8181:80 -n apps

kubectl proxy
http://127.0.0.1:8001/
curl http://127.0.0.1:8001/api/v1/namespaces/apps/pods/operator:80/proxy/
curl -XDELETE http://127.0.0.1:8001/api/v1/namespaces/apps/pods/operator



kubectl create deployment app-cache --image=memcached:1.6.8 --replicas=4
kubectl get deployments
kubectl describe deployment app-cache
kubectl get deployments,pods,replicasets
kubectl delete deployment app-cache

kubectl set image deployment app-cache memcached=memcached:1.6.10 --record
kubectl get deployments -o wide
kubectl rollout history deployment app-cache
kubectl rollout history deployments app-cache --revision=2
kubectl rollout undo deployment app-cache --to-revision=1


kubectl scale deployment app-cache --replicas=6
kubectl scale statfulset redis --replicas=3
kubectl create -f redis.yaml
kubectl get statefulsets
kubectl get statefulset redis
kubectl get pods


kubectl autoscale deployment app-cache --cpu-percent=80 --min=3 --max=5
kubectl get hpa
kubectl describe hpa app-cache




kubectl create configmap db-config --from-literal=DB_HOST=mysql-service --from-literal=DB_USER=backend

apiVersion: v1
kind: ConfigMap
metadata:
  name: db-config
data:
  DB_HOST: mysql-service
  DB_USER: backend

kubectl exec backend -- env




kubectl create secret generic db-creds --from-literal=pwd=s3cre!

apiVersion: v1
kind: Secret
metadata:
  name: db-creds
type: Opaque
data:
  pwd: czNjcmUh

  apiVersion: v1
kind: Secret
metadata:
  name: secret-basic-auth
type: kubernetes.io/basic-auth
stringData:
  username: bmuschko
  password: secret